DESIGN PHILOSOPHY

IO AND MEMORY REPRESENTED AS AN INFINITE ARRAY

STANDARD INPUT CAN BE READ FROM ADDR 0x0000-0x03FF

STANDARD OUTPUT CAN BE READ FROM ADDR 0x0400-0x07FF

0x0800+ IS USED AS SYSTEM MEMORY

EACH ADDRESS STORES 1 BYTE OF MEMORY

ACCUMULATORS ARE SET TO 0 AT RUNTIME

CODE = MEMORY INTERPRETATION

PROGRAM STARTS

i64 ACC_A
i64 ACC_B
i64 PC
i8 MEM[2**64]

NECESSARY COMMANDS

GIVEN op = MEM[PC]
GIVEN ACC[i] = (i*8)th bits of ACC
GIVEN read_u8 => pc++;
GIVEN read_u64 => pc += 8;

LDA (op == 1)
ACC_A[read_u8()] = MEM[read_u64()]

STA (op == 2)
MEM[read_u64()] = ACC_A[read_u8()]

SWP (op == 3)
tmp = ACC_A
ACC_A = ACC_B
ACC_B = tmp

JMPA (op == 4)
PC = ACC_A

JMPBZ (op == 5)
IF ACC_B == 0 THEN PC = read_u64()

ADDAB (op == 6)
ACC_A += ACC_B

SUBAB (op == 7)
ACC_A -= ACC_B

LDAB (op == 8)
ACC_A = MEM[ACC_B]

STAB (op == 9)
MEM[ACC_B] = ACC_A

CMPAB (op == 10)
ACC_B = (ACC_A == ACC_B) ? 0 : 1

VOID (op == 11)
read_u64()
