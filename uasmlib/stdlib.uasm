.MACRO LDA64 x
LDA 7, %x
LDA 6, %x + 1
LDA 5, %x + 2
LDA 4, %x + 3
LDA 3, %x + 4
LDA 2, %x + 5
LDA 1, %x + 6
LDA 0, %x + 7
.ENMAC

.MACRO LDB64 x
SWP
LDA64 %x
SWP
.ENMAC

.MACRO LDB x, y
SWP
LDA %x, %y
SWP
.ENMAC

; Set B to 0
.MACRO SETBZ
; a = ? b = 0|1
CMPAB
SWP
v:
VOID 0
LDB 0, v + 1
.ENMAC

.MACRO JMP addr
SETBZ
JMPBZ %addr
.ENMAC

.MACRO CALL addr
LDPCA
.ENMAC


; Jump ahead 0x400 addresses to clear memory for call stack
$DEF STACK_SIZE 0x400
ENTRY_POINT:
CALLSTACK:
VOID ENTRY_POINT + STACK_SIZE
_CSLDA:
LDA 1, ENTRY_POINT + 7
_CSJMPA:
JMPA

$PC ENTRY_POINT + STACK_SIZE

; Set Callstack to 0
SWP
STA CALLSTACK, 0
STA _CSLDA, 0
STA _CSLDA + 1, 0
STA _CSLDA + 8, 0
STA _CSLDA + 9, 0
STA _CSJMPA, 0
